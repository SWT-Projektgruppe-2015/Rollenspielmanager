DbVisualizer versteht Dateitypendungen nicht, also muessen sie vom Pathnamen entfernt werden, 
sonst wird eine neue Datenbank mit der Endung als Teil des Namens angelegt.

Bei der persistence.xml, um eine Datenbank zu erstellen, muss, innerhalb dem properties-Block, 
folgendes stehen:	<property name="hibernate.hbm2ddl.auto" value="create-drop"/>
Und zum updaten:	<property name="hibernate.hbm2ddl.auto" value="update-drop"/>

Damit die Datenbank von DbVisualizer lessbar ist muss man MV_STORE=false ans Ende des Blocks wir hier: 
<property name="hibernate.connection.url" value="jdbc:h2:./db/repository;MV_STORE=false"/>

Fuer Entities (um Klassen zu Entities zu befördern):
import javax.persistence.*
(zum Beispiel:	import javax.persistence.Entity;
			import javax.persistence.Id;
			import javax.persistence.Column;
			import javax.persistence.GeneratedValue;)
Syntax of Collumn Annotation:
	@Collumn(name = "NAME")
	String othername;
Sonst kann man nur die Variablendeklaration schreiben, dann wird eine Spalte angelegt die den Variablennamen hat.

Die Annotation @GeneratedValue scheint automatisch Eintraege zu erstellen.

Fuer die Datenbankmanipulations Klasse wichtige imports:
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

for further reading:
https://docs.jboss.org/hibernate/orm/3.6/quickstart/en-US/html/hibernate-gsg-tutorial-jpa.html


From the community documentation:

hibernate.hbm2ddl.auto Automatically validates or exports schema DDL to the database when the SessionFactory is created. With create-drop, the database schema will be dropped when the SessionFactory is closed explicitly.

e.g. validate | update | create | create-drop

So the list of possible options are,

    validate: validate the schema, makes no changes to the database.
    update: update the schema.
    create: creates the schema, destroying previous data.
    create-drop: drop the schema at the end of the session.

These options seem intended to be developers tools and not to facilitate any production level databases, you may want to have a look at the following question; Hibernate: hbm2ddl.auto=update in production?
